# Assumption: graph is stored as adjacency list
function topsort(graph):
    N = graph.numberOfNodes()
    V = [false, ..., false] # Length N
    ordering = [0, ,,,, 0] # Length N
    i = N -1 # Index for ordering array

    for(at = 0; at < N; at++):
        if V[at] == false:
            visitedNodes = []
            dfs(at, V, visitedNodes, graph)
            for nodeId in visitedNodes:
                ordering[i] = nodeId
                i = i - 1
    return ordering

# Execute Depth First Search (DFS)
function dfs(at, V, visitedNodes, graph):
    V[at] = true

    edges = graph.getEdgesOutFromNode(at)
    for edge in edges:
        if V[edge.to] == false:
            dfs(edge.to, V, visitedNodes, graph)

    visitedNodes.add(at)
